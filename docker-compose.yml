version: '3.3'

volumes:
    frontend:
        driver: local
        driver_opts:
            type: 'none'
            device: ${PWD}/frontend/ # eed full path to dir
            o: bind
services:
    service-api-nuxt:
      container_name: service-api-nuxt
      build:
          context: .
          dockerfile: .docker/nuxt/Dockerfile
      volumes:
        - frontend:/var/www/dockerize-nuxt/nuxt-app
      working_dir: /var/www/dockerize-nuxt/nuxt-app
      restart: always
      depends_on:
        - service-fpm-api
      networks:
        - otus-lesson-microservices
#      ports:
#          - "3000:3000"
#      environment:
          #- BACKEND_PRIVATE_URL=http://service-fpm-api:8003
#          - NUXT_HOST=0.0.0.0
#          - NUXT_PORT=4000
      command:
          'npm run dev'

    # Сервис nginx
    service-api-nginx:
      container_name: service-api-nginx
      build:
        context: .
        dockerfile: .docker/nginx/Dockerfile
      ports:
        - 8003:8003
        - 3000:3000
      volumes:
          - "./.docker/nginx/default.conf:/etc/nginx/conf.d/default.conf"
          - ./backend:/var/www/html
          - ./frontend/static:/var/www/static
      depends_on:
          - service-fpm-api
      networks:
          - otus-lesson-microservices

    # Сервис php
    service-fpm-api:
      container_name: service-api-fpm
      user: "1000:1000"
      build:
          context: .
          dockerfile: .docker/php/Dockerfile
      volumes:
        - ./backend:/var/www/html
        - .docker/php/php.ini:/usr/local/etc/php/php.ini
      expose:
          - 8003
      environment:
        - XDG_CONFIG_HOME=/tmp
      networks:
          - otus-lesson-microservices


#    service-queue-api:
#        container_name: service-queue-fpm
#        build:
#            context: .
#            dockerfile: .docker/php/Dockerfile
#        networks:
#            - otus-lesson-microservices
#        command: 'php artisan queue:work'

    # Сервис базы
    service-api-mysql:
        container_name: service-api-mysql
        user: "1000:1000"
        build:
            context: .
            dockerfile: .docker/mysql/Dockerfile
        ports:
            - "3301:3306"
        environment:
            - MYSQL_ROOT_PASSWORD=root
            - MYSQL_DATABASE=laravel
        volumes:
            - .docker/mysql/data:/var/lib/mysql
        networks:
            - otus-lesson-microservices



networks:
    otus-lesson-microservices:
